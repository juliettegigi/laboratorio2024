mixin listaDatosPaciente(paciente)
 .lista
  div(class="titulo-lista")
   h3 Paciente
   if !usuario.deletedAt
    +3puntos('btnEditarPaciente', `/admins2/${usuario.id}/paciente?_method=patch`,usuario.Paciente.deletedAt)
  ul(class=`list-group list-group-flush ${paciente.deletedAt?"lista-datos-usuarioEliminado":""}`)
   li(class="list-group-item") Edad: 
       span= paciente.edad 
   li(class="list-group-item") Fecha de nacimiento:
       span= paciente.nacimiento
   li(class="list-group-item")= "Embarazada: "
       span= paciente.embarazada
   li(class="list-group-item") Provincia: 
       span= paciente.provincia
   li(class="list-group-item") Localidad: 
       span= paciente.localidad
   li(class="list-group-item") Dirección:
       span= paciente.direccion
   li(class="list-group-item") Sexo:
       span= paciente.sexo

mixin listaDatosBioquimico(bioquimico)
 .lista
  div(class="titulo-lista")
   h3 Bioquímico
   if !usuario.deletedAt
    +3puntos('btnEditarBioquimico', `/admins2/${usuario.id}/bioquimico?_method=patch`,usuario.Bioquimico.deletedAt)
  ul(class=`list-group list-group-flush ${bioquimico.deletedAt?"lista-datos-usuarioEliminado":""}`)
   li(class="list-group-item") Matrícula: 
       span= bioquimico?bioquimico.matricula:"" 
   li(class="list-group-item") Título:
       span= bioquimico?bioquimico.titulo:""



mixin formPaciente(divId,paciente,usuarioId,oculto,recepcionista,administrativo)
  .container.form-valorRef(id=divId class=(rta || oculto)?"oculto":"")
    div.titulo-lista
      h3 Datos del paciente
    .container
     form(action=paciente?`/admins2/paciente/${paciente.id}?_method=put`:`/admins2/paciente/` , method="post" class="needs-validation  mt-5  " name="formu" novalidate )                       
         if usuarioId
          input(type="hidden" name="UsuarioId" value=usuario.id)
         if recepcionista
          input(type="hidden" name="recepcionista" value='true')
          
         if administrativo
          input(type="hidden" name="administrativo" value='true')
         div.form-div 
           div
            label(for="edad") Edad 
           div 
            input(type="number" 
                  id="edad"  
                  name="edad"  
                  value=paciente?paciente.edad:''
                  class=`${errors && errores.includes('edad')?'text-danger':''}`
                  )

         div.form-div 
           div
            label(for="nacimiento") Fecha de nacimiento
           div 
            input(type="date"
                  id="nacimiento"  
                  name="nacimiento"  
                  value=paciente?paciente.nacimiento:''
                  class=`${errors && errores.includes('nacimiento')?'text-danger':''}`
                  ) 

         .row
           div 
             label(for="sexo") Sexo 
           div  
             .form-check
                     label(class="form-check-label") Masculino 
                         input(type="radio" name="sexo" value="Masculino"  class="form-check-input" 
                               checked=paciente? (paciente.sexo==='Masculino'?true:false)
                                               :true
                               )
             .form-check
                 label(class="form-check-label")  Femenino 
                     input( type="radio" name="sexo" value="Femenino" class="form-check-input" checked=paciente && paciente.sexo==='Femenino'?true:false)
             .form-check
                 label(class="form-check-label")  Otro   
                 input( type="radio" name="sexo" value="Otro" class="form-check-input" checked=paciente && paciente.sexo==='Otro'?true:false)
             .form-check
                 label(class="form-check-label")  Prefiero no decirlo   
                 input( type="radio" name="sexo" value="Prefiero no decirlo" class="form-check-input" checked=paciente && paciente.sexo==='Prefiero no decirlo'?true:false)
             .form-check.form-switch
               label(class="form-check-label") Embarazada
                 input(class="form-check-input"  type="checkbox" role="switch"  name="embarazada" 
                       disabled=(paciente && paciente.sexo==='Hombre')?true:false
                       checked=(paciente  && paciente.embarazada)?true:false
                       )

         div.form-div 
           div
            label(for="direccion") Dirección 
           div 
            input(type="text" 
                  id="direccion"  
                  name="direccion"  
                  value=paciente?paciente.direccion:''
                  class=`${errors && errores.includes('direccion')?'text-danger':''}`
                  )  

         div.form-div 
           div
            label(for="localidad") Localidad 
           div 
            input(type="text" 
                  id="localidad"  
                  name="localidad"  
                  value=paciente?paciente.localidad:''
                  class=`${errors && errores.includes('localidad')?'text-danger':''}`
                  )         
         div.form-div            
           label(for="provincia") Provincia
           input#provincia(list="provincias", 
                                                 name="provincia", 
                                                 placeholder="Type to search..." 
                                                 value=paciente?paciente.provincia:'' 
                                                 )
           datalist(id="provincias") 
             if provincias
               each p in provincias
                 option(value=p.nombre)                                                                 
         .row.mt-3   
             .col         
                 button(class="btn btn-secondary w-100 py-2" type="submit") 
                     if paciente
                         | Guardar cambios
                     else
                         | Registrar
             .col(id="divRegresarForm2")
              a(class="btn btn-secondary w-100 py-2 btnRegresar" type="button" href=`http://localhost:3000/admins2/${usuario.id}`) Cancelar          
     script(src="/javascripts/administrador/form.js")              
     script. 
         (async()=>{
             const inputProvincia=document.getElementById('provincia')
             // cambia el value del input de provincia ==>
             inputProvincia.addEventListener('input', async(e)=> {
               const provinciaSeleccionada = inputProvincia.value;
               const opciones = document.getElementById('provincias').options;
               const esOpcionValida = Array.from(opciones).some(function(opcion) {
                    return opcion.value === provinciaSeleccionada;
               }); 
         if (esOpcionValida) {
             const dataListLocalidades=document.getElementById('localidades');
             dataListLocalidades.innerHTML="";
             let rta=await fetch(`https://apis.datos.gob.ar/georef/api/localidades?provincia=${provinciaSeleccionada}&campos=nombre&max=1000`);
             let data=await rta.json();
             const localidades=data.localidades;
             for(let localidad of localidades){
                 const opc=document.createElement('option');
                 opc.value=localidad.nombre;
                 dataListLocalidades.appendChild(opc);
             }
             const dataListCalles=document.getElementById('calles');
                 dataListCalles.innerHTML="";
                 rta=await fetch(`https://apis.datos.gob.ar/georef/api/calles?provincia=${inputProvincia.value}&max=5000`)
                 data=await rta.json();
                 const calles=data.calles;
                 for(let calle of calles){
                     const opc=document.createElement('option');
                     opc.value=calle.nombre;
                     dataListCalles.appendChild(opc);
                 }
         } else {
         }
         });
         })();   
         (function () {
           'use strict'
           // Obtener todos los formularios que queremos validar
           var forms = document.querySelectorAll('.needs-validation')
           // Validar cada formulario en el evento de envío
           Array.prototype.slice.call(forms).forEach(function (form) {
             form.addEventListener('submit', function (event) {
               if (!form.checkValidity()) {
                 event.preventDefault()
                 event.stopPropagation()
               }
               form.classList.add('was-validated')
             }, false)
           })
         })()      

mixin formUsuario(divId,usuario=null,oculto=false)
 - const errors=formDataUsuario?.errors
 div(id=divId class=` container form-valorRef  divFormulario ${oculto?"oculto":""}`)
  if errors
   - const arr = ["documento", "nombre", "apellido", "email", "telefono"]
   - errores= arr.filter(elem=>errors.find(e=>e.path===elem))  
  form.row(action=usuario?`/admins2/usuario/${usuario.id}?_method=put`:`/admins2/usuario` , method="post" class="needs-validation  mt-5   " name="formu" novalidate )
   .col 
    .row.text-center
        .titulo-lista
         h3
            | Datos de usuario
        .col
            .form-floating
                input(type="text" class=`form-control ${errors && errores.includes('nombre')?'text-danger':''}` id="nombre" name="nombre" placeholder="Nombre" value=`${(formDataUsuario && formDataUsuario.nombre) || (usuario && usuario.nombre) || ''}`)
                label(for="nombre") Nombre
        .col        
            .form-floating
                input(type="text" class=`form-control ${errors && errores.includes('apellido')?'text-danger':''}` id="apellido" placeholder="Apellido" name="apellido" value=`${(formDataUsuario && formDataUsuario.apellido) || (usuario && usuario.apellido) || ''}`)
                label(for="apellido") Apellido
    .row 
        .col           
            .form-floating
                input(type="text" class=`form-control ${errors && errores.includes('documento')?'text-danger':''}` id="dni" placeholder="11111111" name="documento"  value=`${(formDataUsuario && formDataUsuario.documento) || (usuario && usuario.documento) || ''}`)
                label(for="dni") Dni
        .col        
            .form-floating
                input(type="email" class=`form-control ${errors && errores.includes('email')?'text-danger':''}` id="floatingInput" placeholder="name@example.com" name="email" value=`${(formDataUsuario && formDataUsuario.email) || (usuario && usuario.email) || ''}` )
                label(for="floatingInput") Email               
    .row                      
        .col        
            .form-floating
                input(type="tel" class=`form-control ${errors && errores.includes('telefono')?'text-danger':''}` id="telefono"  name="telefono"  value=`${(formDataUsuario && formDataUsuario.telefono) || (telefonos && telefonos[0].numero) || ''}`)
                input(type="hidden"   name="telefonoId"  value=`${telefono || (telefonos && telefonos[0].id) || ''}`)
                label(for="telefono") Teléfono                                  
    .row                      
        .col        
            .form-group
             label(for="roles") Asignar Roles:
              each role in roles
               .form-check
                 input.form-check-input(type="checkbox", name="roles", value=role.id, id=`role-${role.id}` 
                                       checked= rolesDelUsuario && rolesDelUsuario.some(r => role.nombre == r))
                 label(for=`role-${role.id}`)= role.nombre                                                                
    .row   
        .col         
            button(class="btn btn-secondary w-100 py-2" type="submit") 
                if editarUsuario
                    | Guardar cambios
                else
                    | Registrar
        if usuario           
         .col(id="divRegresarForm1")
          a(class="btn btn-secondary w-100 py-2 btnRegresar" type="button" href=`http://localhost:3000/admins2/${usuario.id}`) Cancelar            
  if errors                
   .row(class="alert alert-danger" role="alert")
    .col 
     each e in errors
      p= e.msg 
     if formDataUsuario && formDataUsuario.href 
      a(href=formDataUsuario.href) Ver usuario ya registrado
       
mixin formBioquimico(divId,bioquimico,usuarioId,oculto)
 div(id=divId class=`${oculto?"oculto":""} container  form-valorRef`)
  div
    h3.titulo-lista Datos del bioquímico 
  .container
   form(action=bioquimico?`/admins2/bioquímico/${bioquimico.id}?_method=put`:`/admins2/bioquímico` , method="post" class="needs-validation  mt-5  " name="formu" novalidate )
    if usuarioId
     input(type="hidden" name="UsuarioId" value=usuario.id)
    div.form-div 
       div
        label(for="titulo") Título 
       div 
        input(type="text" 
              class=`${errors && Object.hasOwn(errores, 'titulo')?'text-danger':''}` 
              id="titulo"  
              name="titulo"  
              autofocus
              autocomplete="off"
              value=`${titulo || (bioquimico && bioquimico.titulo) || ''}`)   
    div.form-div 
       div
        label(for="matricula") Matrícula 
       div 
        input(type="text" 
              class=` ${errors && Object.hasOwn(errores, 'matricula')?'text-danger':''}` 
              id="matricula"  
              name="matricula"  
              value=`${matricula || (bioquimico && bioquimico.matricula) || ''}`)
    .row.form-btn  
       .col         
           button(class="btn btn-secondary w-100 py-2" type="submit") 
               if editarUsuario
                   | Guardar cambios
               else
                   | Registrar
       .col(id="divRegresarForm3")
        a(class="btn btn-secondary w-100 py-2 btnRegresar" type="button" href=`http://localhost:3000/admins2/${usuario.id}`) Cancelar 

mixin formTecnico(divId,tecnico,usuarioId,oculto)
 div(id=divId class=`${oculto?"oculto":""}`)
   form.row(action=tecnico?`/admins2/técnico/${usuarioId}?_method=put`:`/admins2/técnico/${usuarioId}` , method="post" class="needs-validation  mt-5   " name="formu" novalidate )
    if usuarioId
          input(type="hidden" name="UsuarioId" value=usuario.id)  
    .col         
        button(class="btn btn-secondary w-100 py-2" type="submit") 
            if tecnico
                | Guardar cambios
            else
                | Registrar
    .col(id="divRegresarForm3")                        
       